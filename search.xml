<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C语言自学攻略</title>
    <url>/2020/06/01/C%E8%AF%AD%E8%A8%80%E8%87%AA%E5%AD%A6%E6%94%BB%E7%95%A5/</url>
    <content><![CDATA[<p>我目前是自学C语言，从头开始学起，来写一份我的自学攻略。</p>
<a id="more"></a>

<hr>
<p>我是按照<strong><font color='#ff9900'>陈越姥姥 </font></strong> <a href="https://weibo.com/ttarticle/p/show?id=2309404469829309432076&u=2826785055&m=4470881575738933&cu=5065615876&ru=2826785055&rm=4469829308400752" target="_blank" rel="noopener">C语言自学攻略</a> ，作为大纲进行学习的。可以在微博搜索关注到她，也是非常厉害浙江大学的教授。</p>
<p>首先在MOOC 找到<strong>浙江大学翁恺老师开设的“程序设计入门——C语言</strong> ，翁凯老师讲的特别好，从基础开始讲起，初学者也不会听不懂。学习完后，可以学习进阶课程。</p>
<p>平常刷题可以通过“<strong><a href="https://pintia.cn/problem-sets?tab=0" target="_blank" rel="noopener">拼题A</a></strong>” 来刷题，进行练习，检验自己的学习程度。我目前从头在开始，一些基础知识还要巩固完善。目前进度：<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200603224121869.png" alt="image-20200603224121869"></p>
<p>我还有一本C语言书，C primer。这本书很好，但是感觉讲的特别详细，前面不会用到的一些知识点，也是会给你说明清楚，初学看着的话可能有点云里雾里的。。。。</p>
<hr>
<p>目前就这些吧，详情请看<strong><font color='#ff9900'>陈越姥姥 </font></strong> <a href="https://weibo.com/ttarticle/p/show?id=2309404469829309432076&u=2826785055&m=4470881575738933&cu=5065615876&ru=2826785055&rm=4469829308400752" target="_blank" rel="noopener">C语言自学攻略</a> ，可以点击跳转链接。</p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>C:C语言的精神及程序结构</title>
    <url>/2020/06/01/C-C%E8%AF%AD%E8%A8%80%E7%9A%84%E7%B2%BE%E7%A5%9E/</url>
    <content><![CDATA[<p>学习一门语言先要了解他，明白他的原理。</p>
<p>这一篇文章主要是写计算机语言的原理，和C的精神。编程的主要步骤。</p>
<a id="more"></a>

<h1 id="计算机语言"><a href="#计算机语言" class="headerlink" title="计算机语言"></a>计算机语言</h1><ul>
<li>程序是用特殊的编程语言写出来表达如何解决问题的。</li>
<li>不是用编程语言来和计算机交谈，而是描述要求它如何做事情的过程或方法。</li>
</ul>
<hr>
<p><strong>算法：</strong></p>
<ul>
<li>我们要让计算机做计算，就需要像这样找出计算的步骤，然后用编程语言写出来</li>
<li>计算机做的所有的事情都叫做计算</li>
<li>计算的步骤就是算法</li>
</ul>
<hr>
<p><strong>程序的执行：</strong></p>
<p>解释：借助一个程序，那个程序能试图理解你的程序，然后按照你的要求执行</p>
<p>编译：借助一个成团关系，就像一个翻译，把你的程序翻译成计算机真正能懂的语言——机器语言——写的程序，然后，这个机器语言写的程序就能直接执行了。</p>
<hr>
<p><strong>解释语言VS编译语言</strong></p>
<ul>
<li>语言本无编译/解释之分</li>
<li>常用的执行方式而已</li>
<li>解释性语言有特殊的计算能力</li>
<li>编译型语言优缺点的运算性能</li>
</ul>
<hr>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/1.png" alt="1" style="zoom: 50%;" />

<hr>
<h1 id="C的精神"><a href="#C的精神" class="headerlink" title="C的精神"></a>C的精神</h1><p><strong>C的精神：</strong></p>
<ul>
<li>信任程序员；</li>
<li>不要妨碍程序员做需要做的事；</li>
<li>保持语言精练简单；</li>
<li>只提供一种方法执行一项操作；</li>
<li>让程序运行更快，即使不能保证其可移植性。</li>
</ul>
<p>在最后一点上，标准委员会的用意是：<strong><font color='#ff9900'>作为实现，应该针对目标计算机来定义最合适的某特定操作，而不是 <u>强加一个抽象</u>、<u>统一的定义</u>。在学习C语言过程中，许多方面都反映了这一哲学思想。 </font></strong></p>
<hr>
<p>C是编译型语言。C编译器和链接器是把C语言源代码转换成可执行代码的程序。</p>
<p><strong>C的哲学：</strong></p>
<ol>
<li>轻装上阵</li>
</ol>
<p>函数是C程序的基本模块。</p>
<hr>
<p><strong>编程步骤:</strong></p>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/clip_image002.png" alt="clip_image002" style="zoom:80%;" />

<p><strong>编程的7个步骤：</strong></p>
<p>在动手写程序之前，要在脑中有清晰的思路。想要程序去做什么首先自己要明确自己想做什么，思考你的程序需要哪些信息，要进行哪些计算和控制，以及程序应该要报告什么信息。在这一步骤中，不涉及具体的计算机语言，应该用一般 <strong><font color='#ff9900'>术语</font></strong> 来描述问题。</p>
<hr>
<p><strong>程序结构：</strong></p>
<ul>
<li><p>程序由一个或多个函数组成，必须有 main() 函数。</p>
</li>
<li><p>函数由函数头和函数体组成。</p>
</li>
<li><p>函数头包括函数名、传入该函数的信息类型和函数的返回类型。</p>
</li>
<li><p>通过函数名后的圆括号可识别出函数，圆括号里可能为空，可能有参数。</p>
</li>
<li><p>函数体被花括号括起来，由一系列语句、声明组成。</p>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/3.png" alt="3" style="zoom:67%;" />



</li>
</ul>
<hr>
<p><strong>程序可读性：</strong></p>
<ul>
<li>选择有意义的函数名和写注释。</li>
<li>多使用空行能提高程序的可读性。</li>
<li>每条语句各占一行。</li>
<li>分号告诉编译器一条语句在哪里结束、下一条语句在哪里开始。<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/3 .png" alt="3 " style="zoom:80%;" /></li>
</ul>
<hr>
<p><strong>严格规定：</strong></p>
<ul>
<li><strong><font color='#ff9900'> 程序员要具备抽象和逻辑的思维，并谨慎地处理细节问题。</font></strong></li>
<li><strong><font color='#ff9900'>编译器不允许这样，对它而言，几乎正确仍然是错误。</font></strong></li>
</ul>
<hr>
<p><strong><font color="#8fd3f4">独学而无友，则孤陋而寡闻。</font></strong></p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>C:基础程序详解</title>
    <url>/2020/06/03/C-%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<p> C程序的结构示例，基础程序结构详解。</p>
<a id="more"></a>

<p><strong><font color='#ff9900'>典型C程序结构 </font></strong></p>
<hr>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/c-primer%20plus-6.jpg" style="zoom:80%;" >

<hr>
<p><strong><font color='#ff9900'>first源码：</font></strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>　<span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> num;　</span><br><span class="line">num = <span class="number">1</span>;　</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"I am a simple "</span>);</span><br><span class="line">    </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"computer.\n"</span>);</span><br><span class="line">    </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"My　favorite　number　is　%d　because　it　is　first.\n"</span>,num);</span><br><span class="line">    </span><br><span class="line"><span class="keyword">return</span>　<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h1 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span>　<span class="meta-string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure>


<p><code>stdio.h</code> 是C编译器软件包的标准部分，它提供键盘输入和屏幕输出的支持。</p>
<p>圆括号表明 <code>main()</code> 是一个函数名。<code>int</code> 表明<code>main()</code>函数返回一个整数，<code>void</code> 表明<code>main()</code> 不带任何参数。</p>
<hr>
<h2 id="include指令和头文件"><a href="#include指令和头文件" class="headerlink" title="#include指令和头文件"></a><strong>#include指令和头文件</strong></h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br></pre></td></tr></table></figure>

<p> 这行代码是一条C预处理器指令</p>
<p> 在C程序顶部的信息集合被称为头文件（header）</p>
<ul>
<li>头文件中可以定义一些常量，或者指明函数名以及如何使用它们。</li>
<li>头文件帮助编译器把你的程序正确地组合在一起。</li>
</ul>
<p>特定C实现的文档中应该包含对C库函数的说明。</p>
<p>这些说明确定了使用哪些函数需要包含哪些头文件。</p>
<p>要使用 <code>printf()</code> 函数，必须包含 <code>stdio.h</code> 头文件。</p>
<p>每次用到库函数，都会用 <code>#include</code> 指令包含<strong><font color='#ff9900'> ANSI/ISO</font></strong>标准指定的头文件。</p>
<hr>
<h2 id="main-函数"><a href="#main-函数" class="headerlink" title="main()函数"></a><strong>main()函数</strong></h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure>



<p>C程序一定从 <code>main()</code> 函数开始执行。</p>
<p><code>main()</code> 函数必须是开始的函数。</p>
<p>圆括号用于识别 <code>main()</code> 是一个函数。</p>
<p><code>int</code> 是 <code>main()</code> 函数的返回类型。</p>
<p>这表明 <code>main()</code> 函数返回的值是整数，返回给操作系统。</p>
<p>通常，函数名后面的圆括号中包含一些传入函数的信息。</p>
<hr>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p><strong><font color='#ff9900'>/* </font></strong> 一个简单的程序 <strong><font color='#ff9900'> * /</font></strong>   </p>
<ul>
<li><strong><font color='#ff9900'>/ *  * /</font></strong>   多行注释</li>
</ul>
<p><strong><font color='#ff9900'>// </font></strong> 一个简单的程序    </p>
<ul>
<li><strong><font color='#ff9900'>//</font></strong>    单行注释</li>
</ul>
<hr>
<h2 id="花括号、函数体和块"><a href="#花括号、函数体和块" class="headerlink" title="花括号、函数体和块"></a>花括号、函数体和块</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">… </span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>花括号把<code>main()</code>函数括起来。</p>
<p>一般而言，所有的C函数,都使用花括号标记函数体的开始和结束。</p>
<p>这是规定，不能省略。</p>
<p>只有花括号<code>（{}）</code>能起这种作用，圆括号<code>（()）</code>和方括号<code>（[]）</code>都不行。</p>
<p><strong><font color='#ff9900'>花括号还可用于把函数中的多条语句合并为一个单元或块。</font></strong></p>
<hr>
<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> num;</span><br></pre></td></tr></table></figure>



<p><code>int</code> 是一种数据类型。</p>
<p>其一，在函数中有一个名为 <code>num</code> 的变量（variable）。</p>
<p>其二，<code>int</code> 表明 <code>num</code> 是一个整数（即，没有小数点或小数部分的数）。</p>
<p><code>int</code> 是C语言的一个关键字，表示一种基本的C语言数据类型。</p>
<p>关键字是语言定义的单词，不能做其他用途。例如，不能用 <code>int</code> 作为函数名和变名。</p>
<p>示例中的 <code>num</code> 是一个标识符，也就一个变量、函数或其他实体的名称。</p>
<p>在C语言中，所有变量都必须先声明才能使用。</p>
<p>这意味着必须列出程序中用到的所有变量名及其类型。</p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>C 语言可以处理多种类型的数据，如整数、字符和浮点数。</p>
<p>把变量声明为整型或字符类型，计算机才能正确地储存、读取和解释数据。</p>
<h3 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h3><p>给变量命名时要使用有意义的变量名或标识符</p>
<p>（如，程序中需要一个变量数羊，该变量名应该是sheep_count而不是x3）。</p>
<p>如果变量名无法清楚地表达自身的用途，可在注释中进一步说明。</p>
<p>这是一种良好的编程习惯和编程技巧。</p>
<p>C语言的名称区分大小写，即把一个字母的大写和小写视为两个不同的字符。</p>
<p>因此，stars和Stars、STARS都不同。</p>
<p>一定要声明变量</p>
<p>把所有的变量放在一处，方便读者查找和理解程序的用途。</p>
<hr>
<h2 id="printf-函数"><a href="#printf-函数" class="headerlink" title="printf()函数"></a>printf()函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"I am a simple "</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"computer.\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"My favorite number is %d because it is first.\n"</span>, num);</span><br></pre></td></tr></table></figure>



<p>上面的第1行把 I am a simple 传递给 <code>printf()</code> 函数。</p>
<p>该信息被称为参数，是函数的实际参数。</p>
<p><code>printf()</code> 函数会查看双引号中的内容，并将其打印在屏幕上。</p>
<p>括号里面的运行完后，控制权为 <code>printf()</code> ,他的上一级是 <code>main()</code> 函数</p>
<p>函数执行结束后，控制权被返回至主调函数（calling function），然后是 <code>main()</code> 。</p>
<h3 id="换行符"><a href="#换行符" class="headerlink" title="换行符"></a>换行符</h3><p><strong>/n 是换行符</strong></p>
<p>对于 <code>printf()</code> 而言，它的意思是“在下一行的最左边开始新的一行”。</p>
<p>换行符是一个转义序列。转义序列用于代表难以表示或无法输入的字符。</p>
<p><code>\t</code> 代表Tab键，<code>\b</code> 代表Backspace键（退格键）。每个转义序列都以反斜杠字符（\）开始。</p>
<h3 id="d"><a href="#d" class="headerlink" title="%d"></a><strong>%d</strong></h3><p><code>%d</code>  相当于是一个占位符，其作用是指明输出 <code>num</code> 值的位置</p>
<p>%   提醒程序，要在该处打印一个变量，d表明把变量作为十进制整数打印。</p>
<p>printf() 函数名中的 f 提醒用户，这是一种格式化打印函数。</p>
<hr>
<h2 id="return语句"><a href="#return语句" class="headerlink" title="return语句"></a>return语句</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>



<p><code>int main(void)</code> 中的 <code>int</code> 表明 <code>main()</code> 函数应返回一个整数。</p>
<p>有返回值的 C 函数要有 <code>return</code> 语句。</p>
<p>该语句以 <code>return</code> 关键字开始，后面是待返回的值，并以分号结尾。</p>
<p>如果遗漏 <code>main()</code> 函数中的 <code>return</code> 语句，程序在运行至最外面的右花括号（ } ）时会返回0。</p>
<p>因此，可以省略 <code>main()</code> 函数末尾的 <code>return</code> 语句。但是，不要在其他有返回值的函数中漏掉它。</p>
<p><strong><font color='#ff9900'>可以省略，但没必要。</font></strong></p>
<hr>
]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/26/hello-world/</url>
    <content><![CDATA[<p>**<font color='#ff9900'><br>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br>**</p>
<p><strong></font></strong></p>
<a id="more"></a>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>博客常用字颜色</title>
    <url>/2020/06/03/%E5%8D%9A%E5%AE%A2%E5%B8%B8%E7%94%A8%E5%AD%97%E9%A2%9C%E8%89%B2/</url>
    <content><![CDATA[<p>在博文的使用中，经常会遇到大边幅同一个色调，关键词不能区分，列举下面几种颜色，进行使用，易区分。</p>
<a id="more"></a>

<hr>
<h1 id="颜色名列表"><a href="#颜色名列表" class="headerlink" title="颜色名列表"></a><a href="http://www.w3school.com.cn/tags/html_ref_colornames.asp" target="_blank" rel="noopener">颜色名列表</a></h1><h2 id="绿色-green"><a href="#绿色-green" class="headerlink" title="绿色-green"></a><strong><font color='#2eb82e'>绿色-green</font></strong></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**&lt;font color&#x3D;&#39;#2eb82e&#39;&gt;&lt;&#x2F;font&gt;**</span><br></pre></td></tr></table></figure>



<hr>
<h2 id="橙色–orange"><a href="#橙色–orange" class="headerlink" title="橙色–orange"></a><font color='#ff9900'><strong>橙色–orange</strong></font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**&lt;font color&#x3D;&#39;#ff9900&#39;&gt;&lt;&#x2F;font&gt;**</span><br></pre></td></tr></table></figure>



<hr>
<h2 id="淡黄色"><a href="#淡黄色" class="headerlink" title="淡黄色"></a><font color="#f6d365"><strong>淡黄色</strong></font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**&lt;font color&#x3D;&quot;#f6d365&quot;&gt;&lt;&#x2F;font&gt;**</span><br></pre></td></tr></table></figure>



<hr>
<h2 id="蓝色-blue"><a href="#蓝色-blue" class="headerlink" title="蓝色-blue"></a><font color='#1a75ff'><strong>蓝色-blue</strong></font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**&lt;font color&#x3D;&#39;#1a75ff&#39;&gt; &lt;&#x2F;font&gt;**</span><br></pre></td></tr></table></figure>



<hr>
<h2 id="浅蓝色"><a href="#浅蓝色" class="headerlink" title="浅蓝色"></a><font color="#8fd3f4"><strong>浅蓝色</strong></font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**&lt;font color&#x3D;&quot;#8fd3f4&quot;&gt; &lt;&#x2F;font&gt;**</span><br></pre></td></tr></table></figure>



<hr>
<h2 id="紫色-purple"><a href="#紫色-purple" class="headerlink" title="紫色-purple"></a><font color='#8a00e6'><strong>紫色-purple</strong></font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**&lt;font color&#x3D;&#39;#8a00e6&#39;&gt; &lt;&#x2F;font&gt;**</span><br></pre></td></tr></table></figure>



<hr>
]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>循环</title>
    <url>/2020/09/08/%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<p>有点久没更新博文了，现在来从前往后梳理一遍</p>
<p>这一篇<strong><font color='#ff9900'> &lt;判断与循环&gt; </font></strong></p>
<a id="more"></a>

<p>今天半夜补的，有点乱，大概先写出来，之后重新排版一遍</p>
<hr>
<p>如果(im小于0)，那么</p>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200908004317241.png" alt="image-20200908004317241" style="zoom: 50%;" />

<p>计算两个值之间的关系，所以叫做关系运算</p>
<p>我靠 图发不出来</p>
<p>标记一下 ，明天补上</p>
<p>当两个值得关系符合关系运算符的预期时，关系运算的结果为整数1，否则为整数0；</p>
<p>运算符的优先级比算术运算的低，但是比赋值运算的高</p>
<ul>
<li>7&gt;= 3 + 4</li>
<li>int r = a&gt; 0;</li>
</ul>
<p>优先级</p>
<p>判断是否相等的==和!=的优先级比其他的低，而连续的关系运算是从左到右进行的</p>
]]></content>
      <categories>
        <category>Cs</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>变量,赋值</title>
    <url>/2020/06/16/%E5%8F%98%E9%87%8F-%E8%B5%8B%E5%80%BC/</url>
    <content><![CDATA[<p>整理一下前面所学的变量和赋值知识点。</p>
<a id="more"></a>

<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a><strong>变量</strong></h2><p>和数学不同，a=b在数学中表示关系，即a和b的值一样；</p>
<p>而在程序设计中，a=b表示要求计算机做一个动作：</p>
<p>将b的值赋给a。</p>
<p>关系是静态的，而动作是动态的。</p>
<p>在数学中，a=b和b=a是等价的，而在程序中，两者的意思完全相反。</p>
<p><strong><font color='#ff9900'>其他数据类型在程序运行期间可能会改变或被赋值，这些称为 变量（variable）。</font></strong></p>
<hr>
<h2 id="变量初始化"><a href="#变量初始化" class="headerlink" title="变量初始化"></a>变量初始化</h2><ul>
<li>&lt;类型名称&gt;&lt;变量名称&gt;=&lt;初始值&gt;；</li>
<li><code>int price = 0；</code></li>
<li><code>int amount = 100；</code></li>
<li>组合变量定义的时候，也可以在这个定义中单独给单个变量赋初值，如：</li>
<li><code>int price = 0；</code> <code>int amount = 100；</code></li>
</ul>
<hr>
<p><code>int price = 0；</code></p>
<p>这一行，定义了一个变量，变量的名字是price， 类型是 int，初始值是0。</p>
<p><strong><font color='#ff9900'>当赋值发生在定义变量的时候。就是变量初始化。</font></strong></p>
<p>虽然C语言并没有强制要求所有的变量都在定义的地方做初始化，<strong><font color='#ff9900'>但是所有的变量在第一次被使用(出现在赋值运算符的右边)之前应该被赋值一次。</font></strong></p>
<p>如果没赢进行初始化赋值，会出现其他的数字，这个数字，好像就是例如，int 的取值范围之类。</p>
<p><strong><font color='#ff9900'>C是一种由类型的语言，所有的变量在使用之前必须定义或声明，所有的变量必须具有确定的数据类型。数据类型表示在变量中可以存放什么样的数据，变量中只能存放指定类型的数据，程序运行过程中也不能改变变量的类型。</font></strong></p>
<hr>
<h2 id="变量名"><a href="#变量名" class="headerlink" title="变量名"></a><strong>变量名</strong></h2><p>变量需要一个名字，变量的名字是一种“标识符”，意思是它是用来识别这个和那个的不同的名字。</p>
<p>标识符有标识符的构造规则，基本的原则是：标识符只能由字母,数字和下划线组成，数字不可以出现在第一个位置上，C语言的关键字(有的地方叫它们保留字)不可以用作标识符。</p>
<hr>
<h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p><strong><font color='#ff9900'>有些数据类型在程序使用之前已经预先设定好了，在整个程序的运行过程中没有变化，这些称为 常量（constant）。</font></strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> change = <span class="number">100</span> - price;</span><br></pre></td></tr></table></figure>

<ul>
<li>固定不变的数，是常数。直接写在程序里，我们称作直接量。</li>
<li>更好的方式，是定义一个常量；</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> AMOUNT = <span class="number">100</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li><p><code>const</code>是一个修饰符,加在<code>int</code>的前面，用来给这个变量加上一个<code>const</code> (不变的) 的属性。</p>
</li>
<li><p>这个<code>const</code> 的属性表示这个变量的值一旦初始化，就不能再修改了。</p>
</li>
</ul>
<hr>
<h1 id="关于整形，浮点数"><a href="#关于整形，浮点数" class="headerlink" title="关于整形，浮点数"></a>关于整形，浮点数</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(foot + inch / <span class="number">12</span>) * <span class="number">0.3048</span>;</span><br></pre></td></tr></table></figure>

<p>当没有定义浮点数的时候，以整型 * 整型 时候，结果只能是整数。直接把小数点后，都扔掉了。</p>
<ul>
<li><strong><font color='#ff9900'>10和10.0在C中是完全不同的数</font></strong></li>
<li><strong><font color='#ff9900'>10.0是浮点数</font></strong></li>
</ul>
<p><strong>解决方法：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(foot + inch / <span class="number">12.0</span>) * <span class="number">0.3048</span>;</span><br></pre></td></tr></table></figure>

<p>把12更改为12.0，使他成为浮点数。</p>
<p><strong><font color='#ff9900'>去进行运算时，C会将整数转换成浮点数，然后进行 浮点数的运算。</font></strong></p>
<hr>
<h2 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h2><ul>
<li>带小数点的数值，浮点这个词的本意就是指小数点是浮动的，是计算机内部表达非整数(包含分数和无理数) 的一种方式。</li>
<li>另一种方式交定点数，不过在C语言中不会遇到定点数。<strong><font color='#ff9900'>人们借用浮点数这个词来表达所以的带小数点的数。</font></strong></li>
</ul>
<hr>
<h2 id="变量在-printf-和-scanf-中的使用"><a href="#变量在-printf-和-scanf-中的使用" class="headerlink" title="变量在 printf 和 scanf 中的使用"></a>变量在 <code>printf</code> 和 <code>scanf</code> 中的使用</h2><p>整数</p>
<ul>
<li><code>int</code></li>
<li><code>printf(&quot;%d&quot;,.....)</code></li>
<li><code>scanf(&quot;%d&quot;,.....)</code></li>
</ul>
<p>带小数点的数</p>
<ul>
<li><code>float</code> <strong><font color="#8fd3f4">单精度浮点数 </font></strong></li>
<li><code>double</code>  <strong><font color="#8fd3f4">双精度浮点数 </font></strong></li>
<li><code>printf(&quot;%f&quot;,.....)</code></li>
<li><code>scanf(&quot;%lf&quot;,.....)</code></li>
</ul>
<p><strong><font color='#ff9900'>C语言中的 <code>%</code> 作为运算符是用来取余的。</font></strong></p>
<p><strong><font color='#ff9900'><code>%</code>表示取两个数相除以后的余数。</font></strong></p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>练习题（逆序的三位数）</title>
    <url>/2020/06/17/%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<p>这个题目我不会，会了之后详解一下。</p>
<p>程序每次读入一个正三位数，然后输出逆序的数字。</p>
<p>如321    123</p>
<a id="more"></a>

<hr>
<h1 id="题目内容"><a href="#题目内容" class="headerlink" title="题目内容"></a>题目内容</h1><p>逆序的三位数：</p>
<p>程序每次读入一个正三位数，然后输出逆序的数字。注意，当输入的数字含有结尾的0时，输出不应带有前导的0。比如输入700，输出应该是7。</p>
<p>提示：用%10可以得到个位数，用/100可以得到百位数…。将这样得到的三个数字合起来：百位<em>100+十位</em>10+个位，就得到了结果。</p>
<p><strong><em>注意：除了题目要求的输出，不能输出任何其他内容，比如输入时的提示，输出时的说明等等都不能。这道题目要求输出逆序的数字，程序就只能输出这个数字，除此之外任何内容都不能输出。</em></strong></p>
<p><strong>输入格式:</strong></p>
<p>每个测试是一个3位的正整数。</p>
<p><strong>输出格式：</strong></p>
<p>输出逆序的数。</p>
<p><strong>输入样例：</strong></p>
<p>123</p>
<p><strong>输出样例：</strong></p>
<p>321</p>
<h1 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h1><hr>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line">    </span><br><span class="line">    a=i/<span class="number">100</span>;</span><br><span class="line">    b=(i%<span class="number">100</span>)/<span class="number">10</span>;</span><br><span class="line">    c=i%<span class="number">10</span>;</span><br><span class="line">    m=c*<span class="number">100</span>+b*<span class="number">10</span>+a;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200618112753143.png" alt="image-20200618112753143"></p>
<hr>
<h2 id="详解-1"><a href="#详解-1" class="headerlink" title="详解"></a>详解</h2><p>题目要求是：</p>
<ul>
<li><p>输入3位的正整数。</p>
</li>
<li><p><strong><font color='#2eb82e'>824</font></strong></p>
</li>
<li><p>输出格式，逆序的数。</p>
</li>
<li><p><strong><font color='#2eb82e'>428</font></strong></p>
</li>
</ul>
<p>首先可以把 <strong><font color='#2eb82e'>824</font></strong> 看作：a,b,c。</p>
<ul>
<li>分别代替为百位，十位，个位。</li>
</ul>
<p>百位：<code>/100</code> ,可以得到<strong><font color='#2eb82e'>8</font></strong>。</p>
<p>十位：<code>(%100)/10</code> ，取余得到<strong><font color='#2eb82e'>24</font></strong>，再<code>/10</code>可以得到<strong><font color='#2eb82e'>2</font></strong>。</p>
<p>个位：<code>%10</code> ,可以得到<strong><font color='#2eb82e'>4</font></strong>.</p>
<p><strong><font color='#ff9900'>C语言中的 <code>%</code> 作为运算符是用来取余的。</font></strong></p>
<p>最后输出时，以<code>c*100+b*10+a</code> 格式输出。</p>
<p>如果使用：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%d%d%d"</span>,a,b,c);</span><br></pre></td></tr></table></figure>

<p>输入<strong><font color='#2eb82e'>700</font></strong>时，他就会输出<strong><font color='#2eb82e'>007</font></strong>。</p>
<p>不符合题目要求，所以不可用。</p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>C练习题</tag>
      </tags>
  </entry>
  <entry>
    <title>表达式</title>
    <url>/2020/06/18/%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<p>表达式，运算符的关系，以及<strong><font color='#ff9900'><code>i++</code></font></strong>和<strong><font color='#ff9900'><code>i--</code></font></strong> 的理解。</p>
<a id="more"></a>

<h1 id="表达式："><a href="#表达式：" class="headerlink" title="表达式："></a><strong>表达式：</strong></h1><p>一个表达式是一系列运算符和算子的组合，用来计算一个值</p>
<ul>
<li>运算符是指进行运算的动作，比如加法运算符“+” ，减法运算符“-” 。</li>
<li>算子是指参与运算的值，这个值可能是常数，也可能是变量，还可能是一个方法的返回值。</li>
</ul>
<p><strong>运算符：</strong></p>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200621184041731.png" alt="image-20200621184041731" style="zoom: 50%;" />

<p><strong>运算符优先级：</strong></p>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/2.png" alt="2" style="zoom:50%;" />

<p><strong>赋值运算符：</strong></p>
<ul>
<li>赋值也是运算，也有结果</li>
<li>a=6的结果是a被赋予的值，也就是6</li>
<li>a=b=6 <strong>→</strong> a=(b=6)</li>
</ul>
<p>复合赋值：</p>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200621185118718.png" alt="image-20200621185118718" style="zoom: 33%;" />

<p>递增递减运算符：</p>
<ul>
<li>“++”和“–”是两个和特殊的运算符， 他们是单目运算符，这个算子还必须是变量。</li>
<li>这两个运算符分别叫做递增和递减运算符，他们的作用就是给这个变量+1或者-1。</li>
<li>count++ ；</li>
<li>count + = 1；</li>
<li>count = count + 1；</li>
</ul>
<p><strong>前缀后缀：</strong></p>
<ul>
<li>++和– 可以放在变量的前面，叫做前缀形式，也可以放在变量的后面，叫做后缀形式。</li>
<li>a++的值是a加1以前的值，而++a的值是加了1以后的值，无论哪个，a自己的值都加了1了。<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/5.png" alt="5" style="zoom:44%;" />

</li>
</ul>
<p>++–：</p>
<p>可以单独使用，但是不要组合进表达式</p>
<p>个人理解：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i=<span class="number">14</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"i++=%d\n"</span>,i=i++);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"++i=%d"</span>,i=++i);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后的运行结果是：</p>
<p>i++ = 14</p>
<p>++i = 15</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a=<span class="number">14</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> t1 = a++;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> t2 = ++a;		</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"i++=%d\n"</span>,t1);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"++i=%d"</span>,t2);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>i++ = 14;</p>
<p>++i = 16;</p>
<p>这两个式子的结果不同的原因是：</p>
<ol>
<li>对于普通独立的语句，i++和++i是一样的，如：</li>
</ol>
<p>​    i++; 等效于i=i+1;</p>
<p>​    ++i; 等效于i=i+1;</p>
<ol start="2">
<li><p>用于赋值语句，i++先赋值后加1，++i先加1后赋值，如：</p>
<p>   i=1; y=i++;  等效于：i=1; y=i; i=i+1; 则执行完后 y=1; i=2;</p>
<p>   i=1; y=++i;  等效于：i=1; i=i+1; y=i; 则执行完后 y=2; i=2;</p>
</li>
</ol>
<p>第一个式子中，是直接求出++i 所以是++i=14 + 1</p>
<p>第二个式子中，是提前经过定义变量，所以算t2的时候 i++=15后，又进行++i=15+1 =16</p>
<p>所以 t2=16</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo的美化之路</title>
    <url>/2020/05/30/HEXO%E7%9A%84%E7%BE%8E%E5%8C%96%E4%B9%8B%E8%B7%AF/</url>
    <content><![CDATA[<p>目前正在学习使用GitHub的Page服务，搭建博客，记录所学过程！</p>
<p>使用的是Hexo框架部署，第一次使用难免遇到许多问题，写篇博文，把其中的过程，都记录下来。此篇记录美化功能—-好看是第一生产力！</p>
<p>我使用的是Next主题，Must样式。</p>
<a id="more"></a>

<hr>
<h1 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h1><h2 id="基础样式"><a href="#基础样式" class="headerlink" title="基础样式"></a>基础样式</h2><h3 id="下载Next主题，并更改样式"><a href="#下载Next主题，并更改样式" class="headerlink" title="下载Next主题，并更改样式"></a>下载Next主题，并更改样式</h3><p>打开终端，切换到Hexo根目录底下如 <code>G:\blog\sunrisevip</code> 使用<strong>git</strong> 进行克隆</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd G:\blog\sunrisevip  //这是我路径，替换为自己</span><br><span class="line"></span><br><span class="line">git clone https://github.com/next<span class="literal">-theme</span>/hexo<span class="literal">-theme</span><span class="literal">-next</span> themes/next</span><br></pre></td></tr></table></figure>

<p>打开站点文件 <code>hexo / _config.yml</code> 找到 <code>theme</code> 然后将其值更改为 <code>true</code> (或另一个主题目录名称)</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>现在可以再进行验证，终端输入 <code>hexo s</code> 进行部署会出现</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:<span class="number">4000</span> . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>表示已经本地部署成功，输入链接 <code>http://localhost:4000</code> 进行访问验证。</p>
<p>成功出现样式后，可以在主题配置文件下 <code>next/_config.yml</code> ，进行样式更改，支持四种方案。取消掉 <strong>#</strong> 进行更改。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="配置站点图标"><a href="#配置站点图标" class="headerlink" title="配置站点图标"></a>配置站点图标</h3><p>站点图标例如那个可达鸭：</p>
<p><img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531102041860.png" alt="image-20200531102041860"></p>
<p>图标存放在<code>hexo-site/source/images/</code> ，然后在<code>hexo / _config.yml</code> 中的 <code>favicon</code> 样式中进行修改和重命名。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png     //这一行修改</span><br><span class="line">  medium: /images/favicon-32x32-next.png   //这一行修改</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  android_manifest: /images/manifest.json</span><br><span class="line">  ms_browserconfig: /images/browserconfig.xml</span><br></pre></td></tr></table></figure>

<p><strong>favicon</strong> 图标，需经过修改,提供个在线制作网址</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">http://www.bitbug.net/</span></span><br></pre></td></tr></table></figure>

<h3 id="配置头像"><a href="#配置头像" class="headerlink" title="配置头像"></a>配置头像</h3><p>默认情况下，Next主题，侧边栏中不显示头像，通过主题配置文件<code>next/_config.yml</code>下 <code>avater</code> 样式进行修改</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">	url: <span class="regexp">/images/</span>avatar.gif    <span class="comment">//这一行替换图片路径</span></span><br><span class="line">	rounded: <span class="literal">true</span>				<span class="comment">//没搞懂</span></span><br><span class="line"> 	rotated: <span class="literal">true</span>				<span class="comment">//头像将在鼠标悬停时旋转。false关闭</span></span><br></pre></td></tr></table></figure>

<iframe height=194 width=382 src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/xuanzhuan.gif" ></iframe>


<h2 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h2><p> 侧边栏样式默认情况下侧边栏仅显示在博文中，位于左侧，可以在<code>next/_config.yml</code>中<code>sidebar</code> 样式中进行修改。</p>
<h3 id="更改边栏位置"><a href="#更改边栏位置" class="headerlink" title="更改边栏位置"></a>更改边栏位置</h3><p> <code>left</code>→屏幕左侧           <code>right</code>→屏幕左侧</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  position: left</span><br><span class="line">  #position: right</span><br></pre></td></tr></table></figure>

<h3 id="更改边栏宽度"><a href="#更改边栏宽度" class="headerlink" title="更改边栏宽度"></a>更改边栏宽度</h3><p> <code>sidebar.width</code> </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  width: <span class="number">300</span></span><br></pre></td></tr></table></figure>

<h3 id="更改侧边栏样式"><a href="#更改侧边栏样式" class="headerlink" title="更改侧边栏样式"></a>更改侧边栏样式</h3><p>设置条件，在该条件<code>sidebar.display</code>下边栏将通过编辑值显示，该值可以是以下之一：</p>
<ul>
<li><strong><code>post</code></strong> →仅在具有索引的帖子中显示侧边栏。</li>
<li><code>always</code> →在所有页面中显示侧边栏。</li>
<li><code>hide</code> →将其隐藏在所有页面中（但可以由用户手动打开）。</li>
<li><code>remove</code> →完全移除侧边栏。</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  display: post</span><br><span class="line">  #display: always</span><br><span class="line">  #display: hide</span><br><span class="line">  #display: remove</span><br></pre></td></tr></table></figure>

<p>还有几个值，仅支持不同主题样式，不常用没写。</p>
<h3 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h3><p>指定的链接必须具有完整的URL路径（永久链接）。 可以更改社交链接图标</p>
<p><img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531123136810.png" alt="image-20200531123136810"></p>
<p>编辑<code>next/_config.yml</code>中的<code>social</code>部分</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;yourname || fab fa-github</span><br><span class="line">  E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span><br><span class="line">  Weibo: https:&#x2F;&#x2F;weibo.com&#x2F;yourname || fab fa-weibo</span><br><span class="line">  Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || fab fa-google</span><br><span class="line">  Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;yourname || fab fa-twitter</span><br></pre></td></tr></table></figure>

<p>后面中的<code>fab fa-github</code> 是图标样式，可以在下列网站中选取样式,进行替换</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">https://fontawesome.com/icons?d=gallery</span><br></pre></td></tr></table></figure>

<h3 id="侧栏博客卷"><a href="#侧栏博客卷" class="headerlink" title="侧栏博客卷"></a>侧栏博客卷</h3><p>可以在Next的侧边栏中添加博客卷。</p>
<p>设定<code>icon</code> 值图标进行更换</p>
<p>设定<code>title</code>值名称进行更换</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">links_settings:</span><br><span class="line">  icon: fa fa-link</span><br><span class="line">  title: sunrise</span><br></pre></td></tr></table></figure>

<p>设定<code>links</code>值添加喜欢的链接</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">links:</span><br><span class="line">  Title1: http:<span class="comment">//example1.com/</span></span><br><span class="line">  Title2: http:<span class="comment">//example2.com/</span></span><br></pre></td></tr></table></figure>

<h2 id="发布帖子"><a href="#发布帖子" class="headerlink" title="发布帖子"></a>发布帖子</h2><h3 id="标签图标"><a href="#标签图标" class="headerlink" title="标签图标"></a>标签图标</h3><p>默认情况下，帖子底部的标签左侧左侧有一个符号＃。</p>
<p><img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531125917579.png" alt="image-20200531125917579"></p>
<p>喜欢图标而不是符号，<code>next/_config.yml</code> 中更改</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">tag_icon: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h3><p>可以在每篇文章底下添加支付码，以便收到打赏。图片放到主题文件下<code>next\source\images</code> </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># Reward (Donate)</span><br><span class="line">reward_settings:</span><br><span class="line">   enable: <span class="literal">true</span></span><br><span class="line">  animation: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: <span class="regexp">/images/</span>wechatpay.png</span><br><span class="line">  alipay: <span class="regexp">/images/</span>alipay.png</span><br><span class="line">  bitcoin: <span class="regexp">/images/</span>bitcoin.png</span><br></pre></td></tr></table></figure>

<h3 id="订阅链接"><a href="#订阅链接" class="headerlink" title="订阅链接"></a>订阅链接</h3><p> Follow me</p>
<p>根据自己选择开启，或替换地址，图标</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Subscribe through Telegram Channel, Twitter, etc.</span><br><span class="line"># Usage: &#96;Key: permalink || icon&#96; (Font Awesome)</span><br><span class="line">follow_me:</span><br><span class="line">  #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;username || fab fa-twitter</span><br><span class="line">  #Telegram: https:&#x2F;&#x2F;t.me&#x2F;channel_name || fab fa-telegram</span><br><span class="line">  #WeChat: &#x2F;images&#x2F;wechat_channel.jpg || fab fa-weixin</span><br><span class="line">  #RSS: &#x2F;atom.xml || fa fa-rss</span><br></pre></td></tr></table></figure>

<h2 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h2><h3 id="添加自定义页面"><a href="#添加自定义页面" class="headerlink" title="添加自定义页面"></a>添加自定义页面</h3><p>在Hexo网站目录，创建一个新的页面</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cd your<span class="literal">-hexo</span><span class="literal">-site</span></span><br><span class="line">hexo new page custom_name</span><br></pre></td></tr></table></figure>

<p>设置前值(官方文档这样叫的)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">title: custom_name</span><br><span class="line">date: <span class="number">2014</span><span class="number">-12</span><span class="number">-22</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">04</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>添加<code>custom_name</code>到<code>menu</code>编辑主题的配置文件，如添加<code>about</code>页面：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: <span class="regexp">/ || fa fa-home</span></span><br><span class="line"><span class="regexp">  archives: /</span>archives/ || fa fa-archive</span><br><span class="line">  about: <span class="regexp">/about/</span> || fa fa-user</span><br></pre></td></tr></table></figure>

<h2 id="其他一些小美化"><a href="#其他一些小美化" class="headerlink" title="其他一些小美化"></a>其他一些小美化</h2><h3 id="修改标签样式"><a href="#修改标签样式" class="headerlink" title="修改标签样式"></a>修改标签样式</h3><p>原标签样式，特别小，颜色比较淡</p>
<p>打开<code>themes/next/layout/page.njk</code> </p>
<p><img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531170710763.png" alt="image-20200531170710763"></p>
<p>把<code>tagcloud</code> 其中的值修改为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123; tagcloud(&#123;min_font: 20,</span><br><span class="line">max_font: 30,</span><br><span class="line">amount: 300,</span><br><span class="line">color: true,</span><br><span class="line">start_color: &#39;#555&#39;,</span><br><span class="line">end_color: &#39;#111&#39;&#125;) &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>现效果：</p>
<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531170956788.png" alt="image-20200531170956788" style="zoom: 67%;" />

<hr>
<h3 id="更改标签图标"><a href="#更改标签图标" class="headerlink" title="更改标签图标"></a>更改标签图标</h3><p>修改<code>Blog\themes\next\layout\_macro\post.njk</code> 中的<code>tag_indicate</code> 值进行替换<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531181142014.png" alt="image-20200531181142014"></p>
<p>最后效果图：</p>
<p><img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531181233424.png" alt="image-20200531181233424"></p>
<hr>
<h3 id="显示当前浏览进度"><a href="#显示当前浏览进度" class="headerlink" title="显示当前浏览进度"></a>显示当前浏览进度</h3><p>文章顶部浏览进度条修改<code>reading_progress</code> 样式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">reading_progress:    #阅读进度条</span><br><span class="line">  enable: true		#false关闭</span><br><span class="line">  # Available values: top | bottom</span><br><span class="line">  position: top</span><br><span class="line">  #color: "#37c6c0"   更换颜色</span><br><span class="line">  color: <span class="string">"#8fd3f4"</span></span><br><span class="line">  height: <span class="number">3</span>px</span><br></pre></td></tr></table></figure>

<p>效果图：<img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531194948741.png" alt="image-20200531194948741" style="zoom:80%;" /></p>
<hr>
<h3 id="增加书签效果"><a href="#增加书签效果" class="headerlink" title="增加书签效果"></a>增加书签效果</h3><p>在博文右上方出现书签角标，更改<code>bookmark</code> 样式，还可更改其颜色</p>
<p>下次打开会在当前页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bookmark:</span><br><span class="line">  enable: true</span><br><span class="line">  color: &quot;#f6d365&quot;</span><br><span class="line">  save: auto</span><br></pre></td></tr></table></figure>

<p>效果图：</p>
<p><img src="https://photo-1300227012.cos.ap-nanjing.myqcloud.com/image-20200531195312969.png" alt="image-20200531195312969"></p>
<hr>
<h3 id="代码块高亮"><a href="#代码块高亮" class="headerlink" title="代码块高亮"></a>代码块高亮</h3><p>选取喜欢的代码块主题，进行<code>codeblock</code>样式更改</p>
<p><code>theme</code>：</p>
<p><code>light</code>→明亮主题模式下</p>
<p><code>dark</code>→暗模式下</p>
<p>在以下网址进行选择</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="attribute">https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"><span class="attribute">https://github.com/highlightjs/highlight.js/tree/master/src/styles</span></span><br></pre></td></tr></table></figure>

<hr>
<p> <code>copy_button</code> ：</p>
<p>开启代码复制功能</p>
<p><code>style</code> ：</p>
<p>更改代码框样式</p>
<p><code>flat</code> →扁平化风格</p>
<p><code>mac</code> →Mac样式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  theme:</span><br><span class="line">    light: tomorrow-night-eighties</span><br><span class="line">    dark: tomorrow-night-blue</span><br><span class="line"></span><br><span class="line">  copy_button:</span><br><span class="line">    enable: <span class="literal">true</span></span><br><span class="line">    show_result: <span class="literal">true</span></span><br><span class="line">    style: flat</span><br></pre></td></tr></table></figure>

<hr>
<p>未完待续吧，之后还有其他优化，会再进行添加。😁😁😁</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>美化</tag>
      </tags>
  </entry>
</search>
